#include <queue>
#include <future>
#include <condition_variable>
#include <vector>

using namespace std;

// удобное определение для сокращения кода
typedef function<void()> task_type;
// тип указатель на функцию, которая является эталоном для функций задач
typedef void (*FuncType) (int* array, long left, long right);
// пул потоков
class ThreadPool {
public:
    // запуск
    void start();
    // остановка
    void stop();
    // проброс задач
    void push_task(FuncType f, int* array, long left, long right);
    // функция входа для потока
    void threadFunc();
private:
    // потоки
    vector<thread> m_threads;
    // поддержка синхронизации очереди
    mutex m_locker;
    // очередь задач
    queue<task_type> m_task_queue;
    // для синхронизации работы потоков
    condition_variable m_event_holder;
    // флаг для остановки работы потоков
    volatile bool m_work;
};

